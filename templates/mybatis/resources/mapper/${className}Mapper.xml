<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="${packageBase}.dao.impl.mybatis.mapper.${className}Mapper">
    <resultMap id="ResultMap" type="${packageBase}.po.${className}">
        <id column="id" property="id" jdbcType="${idColumn.jdbcType}" />
<#list columns as column>
<#if column.attributeName != 'id'>
        <result column="${column.columnName}" property="${column.attributeName}" jdbcType="${column.jdbcType}" />
</#if>
</#list>
    </resultMap>

    <sql id="ColumnList">
        <#list columns as column>${column.columnName}<#if column_index lt columns?size - 1>, </#if></#list>
    </sql>

    <sql id="TableName">${tableName}</sql>

    <insert id="create" parameterType="${packageBase}.po.${className}">
        insert into
        <include refid="TableName" />
        (
        <include refid="ColumnList" />
        ) values (
<#list columns as column>
        ${"#"}{${column.attributeName},jdbcType=${column.jdbcType}}<#if column_index lt columns?size - 1>,</#if>
</#list>
        )
        <selectKey keyProperty="id" resultType="${idColumn.javaTypeFull}" order="AFTER">
            <choose>
                <when test="id == null">select last_insert_id();</when>
                <otherwise>select ${"#"}{id,jdbcType=${idColumn.jdbcType}};</otherwise>
            </choose>
        </selectKey>
    </insert>

    <insert id="createIfNotExist" parameterType="${packageBase}.po.${className}">
        insert into
        <include refid="TableName" />
        (
        <include refid="ColumnList" />
        ) values (
<#list columns as column>
        ${"#"}{${column.attributeName},jdbcType=${column.jdbcType}}<#if column_index lt columns?size - 1>,</#if>
</#list>
        ) on duplicate key update id = id;
        <selectKey keyProperty="id" resultType="${idColumn.javaTypeFull}" order="AFTER">
            <choose>
                <when test="id == null">select last_insert_id();</when>
                <otherwise>select ${"#"}{id,jdbcType=${idColumn.jdbcType}};</otherwise>
            </choose>
        </selectKey>
    </insert>

    <select id="getById" resultMap="ResultMap" parameterType="${idColumn.javaTypeFull}">
        select
        <include refid="ColumnList" />
        from
        <include refid="TableName" />
        where id = ${"#"}{id,jdbcType=${idColumn.jdbcType}}
    </select>

    <select id="getByIds" resultMap="ResultMap" parameterType="java.util.List">
        select
        <include refid="ColumnList" />
        from
        <include refid="TableName" />
        where id in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            ${"#"}{item}
        </foreach>
    </select>

    <select id="search" resultMap="ResultMap" parameterType="java.util.Map">
        select
        <include refid="ColumnList" />
        from
        <include refid="TableName" />
        <where>
<#list columns as column>
            <if test="${column.attributeName} != null">
                <#if column_index gt 0>and </#if>${column.columnName} = ${"#"}{${column.attributeName},jdbcType=${column.jdbcType}}
            </if>
</#list>
        </where>
        <if test="sort != null">
            order by ${"$"}{sort}
            <if test="order != null">
                ${"$"}{order}
            </if>
        </if>
        <if test="limit != null">
            limit ${"#"}{limit}
            <if test="offset != null">
                offset ${"#"}{offset}
            </if>
        </if>
    </select>

    <select id="count" resultType="java.lang.Integer" parameterType="java.util.Map">
        select count(1) from
        <include refid="TableName" />
        <where>
<#list columns as column>
            <if test="${column.attributeName} != null">
                <#if column_index gt 0>and </#if>${column.columnName} = ${"#"}{${column.attributeName},jdbcType=${column.jdbcType}}
            </if>
</#list>
        </where>
    </select>

    <update id="update" parameterType="${packageBase}.po.${className}">
        update
        <include refid="TableName" />
        set
<#list columns as column>
<#if column.columnName != 'id'>
        ${column.columnName} = ${"#"}{${column.attributeName},jdbcType=${column.jdbcType}}<#if column_index lt columns?size - 1>,</#if>
</#if>
</#list>
        where id = ${"#"}{id,jdbcType=${idColumn.jdbcType}}
    </update>

    <delete id="deleteById" parameterType="${idColumn.javaTypeFull}">
        delete from
        <include refid="TableName" />
        where id = ${"#"}{id,jdbcType=${idColumn.jdbcType}}
    </delete>

    <delete id="delete" parameterType="${packageBase}.po.${className}">
        delete from
        <include refid="TableName" />
        where id = ${"#"}{id,jdbcType=${idColumn.jdbcType}}
    </delete>

</mapper>
